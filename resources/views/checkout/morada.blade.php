<x-app-layout>
    <x-slot name="header">
        <h2 class="text-2xl font-bold text-base-content">
            üöö Morada de Entrega
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-2xl mx-auto sm:px-6 lg:px-8">
            <div class="card bg-base-100 shadow-xl">
                <div class="card-body">
                    <form action="{{ route('checkout.morada.store') }}" method="POST" class="space-y-6">
                        @csrf
                        @if ($errors->any())
                            <div style="background: #f8d7da; color: #721c24; padding: 15px;">
                                <ul>
                                    @foreach ($errors->all() as $error)
                                        <li><strong>{{ $error }}</strong></li>
                                    @endforeach
                                </ul>
                            </div>
                        @endif
                        <h3 class="text-lg font-bold mb-4 text-left">Informa√ß√µes de Envio</h3>
                        <div class="space-y-4">
                            <!-- Nome Completo -->
                            <div class="form-control w-full">
                                <label class="label"><span class="label-text font-medium">Nome Completo</span></label>
                                <input type="text" name="nome_completo"
                                    value="{{ old('nome_completo', $ultimaMorada->nome_completo ?? $user->name) }}"
                                    class="input input-bordered w-full" required>
                            </div>

                            <!-- C√≥digo Postal -->
                            <div class="form-control w-full">
                                <label class="label"><span class="label-text font-medium">C√≥digo Postal (Formato:
                                        XXXX-XXX)</span></label>
                                <input type="text" id="codigo_postal" name="codigo_postal"
                                    value="{{ old('codigo_postal', $ultimaMorada->codigo_postal ?? '') }}"
                                    class="input input-bordered w-full" required>
                            </div>

                            <!-- Morada -->
                            <div class="form-control w-full">
                                <label class="label"><span class="label-text font-medium">Morada</span></label>
                                <input type="text" id="morada" name="morada"
                                    value="{{ old('morada', $ultimaMorada->morada ?? '') }}"
                                    class="input input-bordered w-full" required>
                            </div>

                            <!-- Complemento -->
                            <div class="form-control w-full">
                                <label class="label"><span class="label-text font-medium">Complemento (Andar, Porta,
                                        etc.)</span></label>
                                <input type="text" name="complemento"
                                    value="{{ old('complemento', $ultimaMorada->complemento ?? '') }}"
                                    class="input input-bordered w-full">
                            </div>

                            <!-- Localidade -->
                            <div class="form-control w-full">
                                <label class="label"><span class="label-text font-medium">Localidade</span></label>
                                <input type="text" id="localidade" name="localidade"
                                    value="{{ old('localidade', $ultimaMorada->localidade ?? '') }}"
                                    class="input input-bordered w-full" required>
                            </div>

                            <!-- Pa√≠s (Tom Select) -->
                            <div class="form-control w-full">
                                <label class="label"><span class="label-text font-medium">Pa√≠s</span></label>
                                <select id="country-select" name="pais" class="tom-select w-full">
                                    <option value="">Selecione um pa√≠s</option>
                                    <!-- JS preencher√° as op√ß√µes -->
                                </select>
                            </div>

                            <!-- NIF -->
                            <div class="form-control w-full">
                                <label class="label"><span class="label-text font-medium">NIF (Contribuinte -
                                        opcional)</span></label>
                                <input type="text" name="nif" value="{{ old('nif', $ultimaMorada->nif ?? '') }}"
                                    class="input input-bordered w-full">
                            </div>
                        </div>

                        <div class="card-actions justify-end mt-6">
                            <a href="{{ route('cart.index') }}" class="btn btn-ghost">Voltar ao Carrinho</a>
                            <button type="submit" class="btn btn-primary">Continuar para Pagamento</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Tom Select CSS -->
    <link href="https://cdn.jsdelivr.net/npm/tom-select@2.3.0/dist/css/tom-select.css" rel="stylesheet" />
    <!-- Tom Select JS -->
    <script src="https://cdn.jsdelivr.net/npm/tom-select@2.3.0/dist/js/tom-select.complete.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const countries = [
                'Afeganist√£o', '√Åfrica do Sul', 'Alb√¢nia', 'Alemanha', 'Andorra', 'Angola', 'Ant√≠gua e Barbuda',
                'Ar√°bia Saudita', 'Arg√©lia', 'Argentina', 'Arm√©nia', 'Austr√°lia', '√Åustria', 'Azerbaij√£o',
                'Bahamas', 'Bangladexe', 'Barbados', 'Bar√©m', 'B√©lgica', 'Belize', 'Benim', 'Bielorr√∫ssia',
                'Bol√≠via', 'B√≥snia e Herzegovina', 'Botsuana', 'Brasil', 'Brunei', 'Bulg√°ria', 'Burquina Faso',
                'Bur√∫ndi', 'But√£o', 'Cabo Verde', 'Camar√µes', 'Camboja', 'Canad√°', 'Catar', 'Cazaquist√£o',
                'Chade', 'Chile', 'China', 'Chipre', 'Col√¥mbia', 'Comores', 'Congo-Brazzaville',
                'Congo-Kinshasa', 'Coreia do Norte', 'Coreia do Sul', 'Cosovo', 'Costa do Marfim',
                'Costa Rica', 'Cro√°cia', 'Cuba', 'Dinamarca', 'Dominica', 'Egito', 'Emirados √Årabes Unidos',
                'Equador', 'Eritreia', 'Eslov√°quia', 'Eslov√©nia', 'Espanha', 'Estados Unidos', 'Est√≥nia',
                'Essuat√≠ni', 'Eti√≥pia', 'Fiji', 'Filipinas', 'Finl√¢ndia', 'Fran√ßa', 'Gab√£o', 'G√¢mbia',
                'Gana', 'Ge√≥rgia', 'Granada', 'Gr√©cia', 'Guatemala', 'Guiana', 'Guin√©', 'Guin√©-Bissau',
                'Guin√© Equatorial', 'Haiti', 'Holanda', 'Honduras', 'Hungria', 'I√©men', '√çndia',
                'Indon√©sia', 'Ir√£o', 'Iraque', 'Irlanda', 'Isl√¢ndia', 'Israel', 'It√°lia', 'Jamaica', 'Jap√£o',
                'Jibuti', 'Jord√¢nia', 'Laos', 'Lesoto', 'Let√≥nia', 'L√≠bano', 'Lib√©ria', 'L√≠bia', 'Listenstaine',
                'Litu√¢nia', 'Luxemburgo', 'Maced√≥nia do Norte', 'Madag√°scar', 'Mal√°sia', 'Mal√°vi', 'Maldivas',
                'Mali', 'Malta', 'Marrocos', 'Maur√≠cia', 'Maurit√¢nia', 'M√©xico', 'Mianmar', 'Micron√©sia',
                'Mo√ßambique', 'Mold√°via', 'M√≥naco', 'Mong√≥lia', 'Montenegro', 'Nam√≠bia', 'Nauru', 'Nepal',
                'Nicar√°gua', 'N√≠ger', 'Nig√©ria', 'Noruega', 'Nova Zel√¢ndia', 'Om√£', 'Pa√≠ses Baixos',
                'Palau', 'Palestina', 'Panam√°', 'Papua-Nova Guin√©', 'Paquist√£o', 'Paraguai', 'Peru',
                'Pol√≥nia', 'Portugal', 'Qu√©nia', 'Quirguist√£o', 'Quirib√°ti', 'Reino Unido',
                'Rep√∫blica Centro-Africana',
                'Rep√∫blica Dominicana', 'Rep√∫blica Tcheca', 'Rom√©nia', 'Ruanda', 'R√∫ssia', 'Salom√£o',
                'Salvador', 'Samoa', 'Santa L√∫cia', 'S√£o Crist√≥v√£o e Neves', 'S√£o Marino',
                'S√£o Tom√© e Pr√≠ncipe',
                'S√£o Vicente e Granadinas', 'Seicheles', 'Senegal', 'Serra Leoa', 'S√©rvia', 'Singapura',
                'S√≠ria', 'Som√°lia', 'Sri Lanca', 'Suazil√¢ndia', 'Sud√£o', 'Sud√£o do Sul', 'Su√©cia',
                'Su√≠√ßa', 'Suriname', 'Tail√¢ndia', 'Taiwan', 'Tajiquist√£o', 'Tanz√¢nia', 'Timor-Leste',
                'Togo', 'Tonga', 'Trindade e Tobago', 'Tun√≠sia', 'Turquemenist√£o', 'Turquia', 'Tuvalu',
                'Ucr√¢nia', 'Uganda', 'Uruguai', 'Usbequist√£o', 'Vanuatu', 'Vaticano', 'Venezuela',
                'Vietname', 'Z√¢mbia', 'Zimb√°bue'
            ];

            const oldPais = "{{ old('pais', $ultimaMorada->pais ?? 'Portugal') }}";
            const select = document.getElementById('country-select');

            countries.forEach(pais => {
                const option = document.createElement('option');
                option.value = pais;
                option.textContent = pais;
                if (pais === oldPais) {
                    option.selected = true;
                }
                select.appendChild(option);
            });

            new TomSelect('#country-select', {
                create: false,
                sortField: {
                    field: "text",
                    direction: "asc"
                },
                placeholder: "Selecione ou digite um pa√≠s..."
            });

            // C√≥digo Postal ‚Üí Morada Autom√°tica
            const inputCodigoPostal = document.getElementById('codigo_postal');
            const inputMorada = document.getElementById('morada');
            const inputLocalidade = document.getElementById('localidade');

            inputCodigoPostal.addEventListener('blur', function() {
                const valorOriginal = this.value;
                const cp = valorOriginal.replace(/\D/g, '');

                if (cp.length === 7) {
                    const cpFormatado = cp.slice(0, 4) + '-' + cp.slice(4);
                    this.classList.add('loading');

                    fetch(`/api/buscar-cp/${cpFormatado}`)
                        .then(response => {
                            if (!response.ok) throw new Error('C√≥digo Postal n√£o encontrado');
                            return response.json();
                        })
                        .then(data => {
                            inputMorada.value = data.street || '';
                            inputLocalidade.value = data.city || '';
                        })
                        .catch(error => {
                            console.error('Erro ao buscar c√≥digo postal:', error);
                            inputMorada.value = '';
                            inputLocalidade.value = '';
                        })
                        .finally(() => {
                            this.classList.remove('loading');
                        });
                }
            });
        });
    </script>
</x-app-layout>
